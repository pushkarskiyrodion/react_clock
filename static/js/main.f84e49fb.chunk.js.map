{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["formattedDate","date","toUTCString","slice","Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","prevProps","prevName","name","currName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","clockName","hasClock","handleClick","e","preventDefault","button","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAWA,SAASA,EAAcC,GACrB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZN,MAAO,IAAIC,OAGbM,QAAQC,KAAKd,EAAc,EAAKK,MAAMC,UACrC,OAdP,gCAiBE,SAAmBS,GACjB,IAAMC,EAAWD,EAAUE,KACrBC,EAAWT,KAAKU,MAAMF,KAExBD,IAAaE,GACfL,QAAQO,MAAR,uBAA8BJ,EAA9B,eAA6CE,MAtBnD,kCA0BE,WACER,OAAOW,cAAcZ,KAAKD,WA3B9B,oBA8BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAW,EAASR,KAAKU,MAAdF,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGtB,EAAcM,YA3CzB,GAA2BiB,aCV3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,GAOX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAW,UACXC,UAAU,GAHd,EAMEtB,QAAU,EANZ,EAyBEuB,YAAc,SAACC,GACbA,EAAEC,iBAEe,IAAbD,EAAEE,QACJ,EAAKtB,SAAS,CACZkB,UAAU,IAIG,IAAbE,EAAEE,QACJ,EAAKtB,SAAS,CACZkB,UAAU,KApClB,uDAQE,WAA2B,IAAD,OACxBrB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZiB,UAAWL,QAEZ,MAEHW,SAASC,iBAAiB,QAAS3B,KAAKsB,aACxCI,SAASC,iBAAiB,cAAe3B,KAAKsB,eAhBlD,kCAmBE,WACErB,OAAOW,cAAcZ,KAAKD,SAC1B2B,SAASE,oBAAoB,QAAS5B,KAAKsB,aAC3CI,SAASE,oBAAoB,cAAe5B,KAAKsB,eAtBrD,oBAyCE,WACE,MAAgCtB,KAAKJ,MAA7BwB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOb,KAAMY,WAhDlC,GAAyBN,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.f84e49fb.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component, ReactNode } from 'react';\n\ntype State = {\n  today: Date;\n};\n\ntype Props = {\n  name: string;\n};\n\nfunction formattedDate(date: Date): string {\n  return date.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        today: new Date(),\n      });\n\n      console.info(formattedDate(this.state.today));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const prevName = prevProps.name;\n    const currName = this.props.name;\n\n    if (prevName !== currName) {\n      console.debug(`Renamed from ${prevName} to ${currName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render(): ReactNode {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {formattedDate(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component, ReactNode } from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('click', this.handleClick);\n    document.addEventListener('contextmenu', this.handleClick);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleClick);\n  }\n\n  handleClick = (e: MouseEvent): void => {\n    e.preventDefault();\n\n    if (e.button === 2) {\n      this.setState({\n        hasClock: false,\n      });\n    }\n\n    if (e.button === 0) {\n      this.setState({\n        hasClock: true,\n      });\n    }\n  };\n\n  render(): ReactNode {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}